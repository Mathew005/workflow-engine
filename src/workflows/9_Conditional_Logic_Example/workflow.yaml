name: "9. Conditional Logic Example"
description: "Demonstrates branching. It routes to a different final step based on an LLM's sentiment analysis."
inputs:
  - name: "customer_review"
    type: "text"
    label: "Enter a customer review:"
    default: "This new feature is amazing, it has completely changed my workflow!"

steps:
  - name: "analyze_sentiment"
    type: "llm"
    dependencies: []
    params:
      prompt_template: "1_analyze_sentiment.txt"
      input_mapping:
        review: "customer_review"
      output_key: "sentiment_analysis" # Outputs {"sentiment": "Positive"} or {"sentiment": "Negative"}

  - name: "sentiment_router"
    type: "conditional_router"
    dependencies:
      - "sentiment_analysis"
    params:
      condition_key: "sentiment_analysis.sentiment"
      routing_map:
        "Positive": "generate_positive_response"
        "Negative": "generate_negative_response"

  - name: "generate_positive_response"
    type: "llm"
    params:
      prompt_template: "2_positive_response.txt"
      input_mapping:
        original_review: "customer_review"
      output_key: "final_response"

  - name: "generate_negative_response"
    type: "llm"
    params:
      prompt_template: "3_negative_response.txt"
      input_mapping:
        original_review: "customer_review"
      output_key: "final_response"